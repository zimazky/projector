import {makeAutoObservable, runInAction} from 'mobx'
import DateTime from '../utils/datetime';
import OpenWeatherMap from '../utils/openweathermap';

/** –ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è, –∞–≥–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞ –¥–µ–Ω—å */
export type DayForecast = {
  /** –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –¥–Ω—è, unixtime, UTC */
  timestamp: number;
  /** –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ –¥–µ–Ω—å */
  temperatureMin: number;
  /** –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ –¥–µ–Ω—å */
  temperatureMax: number;
  /** –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å –∑–∞ –¥–µ–Ω—å –≤ % */
  humidityMin: number;
  /** –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å –∑–∞ –¥–µ–Ω—å –≤ % */
  humidityMax: number;
  /** –û–±–ª–∞—á–Ω–æ—Å—Ç—å –≤ % */
  clouds: number;
  /** –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤ 0..1 */
  pop: number;
  /** –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å–∞–¥–∫–æ–≤ –≤ –≤–∏–¥–µ –¥–æ–∂–¥—è –≤ –º–º */
  rain: number;
  /** –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å–∞–¥–∫–æ–≤ –≤ –≤–∏–¥–µ —Å–Ω–µ–≥–∞ –≤ –º–º */
  snow: number;
  /** –ü—Ä–∏–∑–Ω–∞–∫ –≥—Ä–æ–∑—ã */
  isThunderstorm: boolean;
  /** –°—Ç—Ä–æ–∫–∞ —Å –∏–∫–æ–Ω–∫–∞–º–∏ emoji */
  emoji: string;
}

class WeatherStore {
  /** 
   * –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
   * 'undefined' - –¥–∞–Ω–Ω—ã–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã
   * 'pending'   - –æ–∂–∏–¥–∞–Ω–∏–µ
   * 'ready'     - –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã
   * 'error'     - –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
   */
  state: 'undefined' | 'pending' | 'ready' | 'error' = 'undefined'
  /** –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ */
  locationName: string = '–û–ª—å—Ö–æ–≤–µ—Ü';
  /** –®–∏—Ä–æ—Ç–∞ –ª–æ–∫–∞—Ü–∏–∏ */
  lat: number = 58.666408;
  /** –î–æ–ª–≥–æ—Ç–∞ –ª–æ–∫–∞—Ü–∏–∏ */
  lon: number = 32.366389;
  /** –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –Ω–∞ 5-6 –¥–Ω–µ–π */
  data: DayForecast[] = [];

  constructor() {
    makeAutoObservable(this);
  }

  /** –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞—Ü–∏–∏ */
  setLocation(lat: number, lon: number, name: string) {
    this.lat = lat;
    this.lon = lon;
    this.locationName = name;
    this.data = [];
  }

  /** –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã */
  async loadForecast() {
    this.state = 'pending';
    const f = await OpenWeatherMap.getForecast(this.lat, this.lon);
    runInAction(()=>{
      let t = DateTime.getBeginDayTimestamp(Date.now()/1000);
      this.state = 'ready';
      this.data = [];
      console.log(f);
      f.list.forEach(d => {
        if(d.dt > t+86400) t += 86400;
        const cd = this.data.find(d => d.timestamp==t);
        let clouds = d.clouds.all;
        const rain = d.rain ? d.rain['3h'] : 0;
        const snow = d.snow ? d.snow['3h'] : 0;
        const isThunderstorm = d.weather.reduce((a, w) => a || (200 <= w.id && w.id < 300), false);
        if(cd === undefined) this.data.push({
          timestamp: t,
          temperatureMin: d.main.temp_min,
          temperatureMax: d.main.temp_max,
          humidityMin: d.main.humidity,
          humidityMax: d.main.humidity,
          clouds,
          pop: d.pop,
          rain,
          snow,
          isThunderstorm,
          emoji: defineEmoji(clouds, rain, snow, isThunderstorm),
        })
        else {
          clouds = Math.max(cd.clouds, clouds);
          cd.temperatureMin = Math.min(cd.temperatureMin, d.main.temp_min);
          cd.temperatureMax = Math.max(cd.temperatureMax, d.main.temp_max);
          cd.humidityMin = Math.min(cd.humidityMin, d.main.humidity);
          cd.humidityMax = Math.max(cd.humidityMax, d.main.humidity);
          cd.clouds = clouds;
          cd.pop = Math.max(cd.pop, d.pop);
          cd.rain += d.rain ? d.rain['3h'] : 0;
          cd.snow += d.snow ? d.snow['3h'] : 0;
          cd.isThunderstorm ||= isThunderstorm;
          cd.emoji = defineEmoji(cd.clouds, cd.rain, cd.snow, cd.isThunderstorm);
        }
      });
    });
  }
}

// –ò–∫–æ–Ω–∫–∏ '‚òÄÔ∏è', 'üå§Ô∏è', '‚õÖ', '‚òÅÔ∏è', 'üå¶Ô∏è', 'üåßÔ∏è', 'üå©Ô∏è', '‚õàÔ∏è', 'üå®Ô∏è'

function defineEmoji(clouds: number, rain: number, snow: number, isThunderstorm: boolean): string {
  const cloudiness = clouds<10 ? '‚òÄÔ∏è' : clouds<30 ? 'üå§Ô∏è' : clouds < 60 ? '‚õÖ' : '‚òÅÔ∏è';
  return cloudiness + (rain>0 ? 'üíß' : '') + (snow>0 ? '‚ùÑÔ∏è' : '') + (isThunderstorm ? '‚ö°' : '');
}

/** –°–∏–Ω–≥–ª—Ç–æ–Ω-—ç–∫–∑–µ–º–ø–ª—è—Ä —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã*/
export const weatherStore = new WeatherStore;